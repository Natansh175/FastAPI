2024-07-31 18:09:21,919 - backend.services.authentication_services - ERROR - Refresh Token function exception: 'coroutine' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 49, in refresh_token
    response.set_cookie(
AttributeError: 'coroutine' object has no attribute 'set_cookie'
2024-07-31 18:09:21,919 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'coroutine' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 49, in refresh_token
    response.set_cookie(
AttributeError: 'coroutine' object has no attribute 'set_cookie'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    return refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 78, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'coroutine' object has no attribute 'set_cookie'
2024-07-31 18:11:29,200 - backend.services.authentication_services - ERROR - Refresh Token function exception: read_categories() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return fn(response)
TypeError: read_categories() missing 1 required positional argument: 'response'
2024-07-31 18:11:29,200 - backend.services.authentication_services - ERROR - Login Required Exception: 500: read_categories() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return fn(response)
TypeError: read_categories() missing 1 required positional argument: 'response'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: read_categories() missing 1 required positional argument: 'response'
2024-07-31 18:50:59,302 - backend.services.authentication_services - ERROR - Refresh Token function exception: 'coroutine' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 48, in refresh_token
    response.set_cookie(
AttributeError: 'coroutine' object has no attribute 'set_cookie'
2024-07-31 18:50:59,302 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'coroutine' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 48, in refresh_token
    response.set_cookie(
AttributeError: 'coroutine' object has no attribute 'set_cookie'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 100, in decorator
    return refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 77, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'coroutine' object has no attribute 'set_cookie'
2024-07-31 19:31:28,533 - backend.services.authentication_services - ERROR - Refresh Token function exception: read_categories() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 69, in refresh_token
    return fn(request)
TypeError: read_categories() missing 1 required positional argument: 'response'
2024-07-31 19:31:28,634 - backend.services.authentication_services - ERROR - Login Required Exception: 500: read_categories() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 69, in refresh_token
    return fn(request)
TypeError: read_categories() missing 1 required positional argument: 'response'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 100, in decorator
    return refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 77, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: read_categories() missing 1 required positional argument: 'response'
2024-07-31 19:31:44,723 - backend.services.authentication_services - ERROR - Refresh Token function exception: read_categories() got multiple values for argument 'request'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 69, in refresh_token
    return fn(request, response, **kwargs)
TypeError: read_categories() got multiple values for argument 'request'
2024-07-31 19:31:44,723 - backend.services.authentication_services - ERROR - Login Required Exception: 500: read_categories() got multiple values for argument 'request'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 69, in refresh_token
    return fn(request, response, **kwargs)
TypeError: read_categories() got multiple values for argument 'request'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 100, in decorator
    return refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 77, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: read_categories() got multiple values for argument 'request'
2024-07-31 19:43:25,759 - backend.services.authentication_services - ERROR - Refresh Token function exception: 'coroutine' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 47, in refresh_token
    response.set_cookie(
AttributeError: 'coroutine' object has no attribute 'set_cookie'
2024-07-31 19:43:25,759 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'coroutine' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 47, in refresh_token
    response.set_cookie(
AttributeError: 'coroutine' object has no attribute 'set_cookie'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 100, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 77, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'coroutine' object has no attribute 'set_cookie'
2024-07-31 19:44:13,412 - backend.services.authentication_services - ERROR - Refresh Token function exception: 'list' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 47, in refresh_token
    response.set_cookie(
AttributeError: 'list' object has no attribute 'set_cookie'
2024-07-31 19:44:13,412 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'list' object has no attribute 'set_cookie'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 47, in refresh_token
    response.set_cookie(
AttributeError: 'list' object has no attribute 'set_cookie'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 100, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 77, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'set_cookie'
2024-07-31 19:46:12,172 - backend.services.authentication_services - ERROR - Refresh Token function exception: create_category() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(request, response)
TypeError: create_category() missing 1 required positional argument: 'response'
2024-07-31 19:46:12,172 - backend.services.authentication_services - ERROR - Login Required Exception: 500: create_category() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(request, response)
TypeError: create_category() missing 1 required positional argument: 'response'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: create_category() missing 1 required positional argument: 'response'
2024-07-31 19:48:34,953 - backend.services.authentication_services - ERROR - Refresh Token function exception: create_category() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(request, response)
TypeError: create_category() missing 1 required positional argument: 'response'
2024-07-31 19:48:34,956 - backend.services.authentication_services - ERROR - Login Required Exception: 500: create_category() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(request, response)
TypeError: create_category() missing 1 required positional argument: 'response'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 100, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: create_category() missing 1 required positional argument: 'response'
2024-07-31 19:50:09,820 - backend.services.authentication_services - ERROR - Refresh Token function exception: create_category() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(request, response)
TypeError: create_category() missing 1 required positional argument: 'response'
2024-07-31 19:50:09,820 - backend.services.authentication_services - ERROR - Login Required Exception: 500: create_category() missing 1 required positional argument: 'response'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 94, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(request, response)
TypeError: create_category() missing 1 required positional argument: 'response'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 100, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: create_category() missing 1 required positional argument: 'response'
2024-07-31 19:54:16,058 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'CategoryUpdateDTO' object has no attribute 'subcategory_id'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 85, in update_category
    response_data = category_services.admin_update_category(
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 158, in admin_update_category
    logger.info(f"Updating subcategory with ID {category_update_dto.subcategory_id}")
  File "C:\ProgramData\Anaconda3\lib\site-packages\pydantic\main.py", line 811, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'CategoryUpdateDTO' object has no attribute 'subcategory_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 92, in update_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'CategoryUpdateDTO' object has no attribute 'subcategory_id'
2024-07-31 19:54:16,403 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'CategoryUpdateDTO' object has no attribute 'subcategory_id'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 85, in update_category
    response_data = category_services.admin_update_category(
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 158, in admin_update_category
    logger.info(f"Updating subcategory with ID {category_update_dto.subcategory_id}")
  File "C:\ProgramData\Anaconda3\lib\site-packages\pydantic\main.py", line 811, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'CategoryUpdateDTO' object has no attribute 'subcategory_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 92, in update_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'CategoryUpdateDTO' object has no attribute 'subcategory_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'CategoryUpdateDTO' object has no attribute 'subcategory_id'
2024-08-01 14:26:45,924 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 39, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:26:45,954 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 39, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:29:09,124 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 42, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:29:09,126 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 42, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:30:14,223 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 39, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:30:14,234 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 39, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:36:17,856 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 39, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:36:17,859 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 29, in create_category
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 39, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-01 14:38:31,027 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'user_db_data'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 28, in create_category
    user_role = request["user_db_data"]['public_id']
  File "C:\ProgramData\Anaconda3\lib\site-packages\starlette\requests.py", line 74, in __getitem__
    return self.scope[key]
KeyError: 'user_db_data'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 41, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'user_db_data'
2024-08-01 14:38:31,040 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'user_db_data'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 93, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 28, in create_category
    user_role = request["user_db_data"]['public_id']
  File "C:\ProgramData\Anaconda3\lib\site-packages\starlette\requests.py", line 74, in __getitem__
    return self.scope[key]
KeyError: 'user_db_data'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 68, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 41, in create_category
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'user_db_data'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 99, in decorator
    return await refresh_token(fn, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 76, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'user_db_data'
2024-08-01 15:59:23,438 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'SubCategoryDTO' object has no attribute 'category_id'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 37, in create_subcategory
    response_data = subcategory_services.admin_insert_subcategory(
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 46, in admin_insert_subcategory
    f"category_id: {subcategory.category_id}.")
  File "C:\ProgramData\Anaconda3\lib\site-packages\pydantic\main.py", line 811, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'SubCategoryDTO' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 44, in create_subcategory
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'SubCategoryDTO' object has no attribute 'category_id'
2024-08-01 15:59:23,571 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'SubCategoryDTO' object has no attribute 'category_id'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 37, in create_subcategory
    response_data = subcategory_services.admin_insert_subcategory(
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 46, in admin_insert_subcategory
    f"category_id: {subcategory.category_id}.")
  File "C:\ProgramData\Anaconda3\lib\site-packages\pydantic\main.py", line 811, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'SubCategoryDTO' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 44, in create_subcategory
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'SubCategoryDTO' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 107, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 84, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'SubCategoryDTO' object has no attribute 'category_id'
2024-08-02 16:26:32,819 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'dict' object has no attribute 'count_documents'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    total_count = response_data.count_documents({})
AttributeError: 'dict' object has no attribute 'count_documents'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 113, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 100, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'dict' object has no attribute 'count_documents'
2024-08-02 16:44:28,666 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Query' object has no attribute 'sort'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).sort(sort_criteria).skip(skip).limit(
AttributeError: 'Query' object has no attribute 'sort'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'sort'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'sort'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'sort'
2024-08-02 16:44:28,666 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Query' object has no attribute 'sort'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).sort(sort_criteria).skip(skip).limit(
AttributeError: 'Query' object has no attribute 'sort'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'sort'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'sort'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'sort'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 107, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 84, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'sort'
2024-08-02 16:44:43,883 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Session' object has no attribute 'find'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.find(table).filter(table.c.is_deleted == 0).sort(
AttributeError: 'Session' object has no attribute 'find'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 46, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Session' object has no attribute 'find'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Session' object has no attribute 'find'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Session' object has no attribute 'find'
2024-08-02 16:44:43,883 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Session' object has no attribute 'find'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.find(table).filter(table.c.is_deleted == 0).sort(
AttributeError: 'Session' object has no attribute 'find'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 46, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Session' object has no attribute 'find'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Session' object has no attribute 'find'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Session' object has no attribute 'find'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 107, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 84, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Session' object has no attribute 'find'
2024-08-02 16:45:29,483 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: filter() got an unexpected keyword argument 'skip'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0, skip=skip, limit=limit, sort_criteria=sort_criteria).all()
TypeError: filter() got an unexpected keyword argument 'skip'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 44, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'skip'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'skip'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'skip'
2024-08-02 16:45:29,483 - backend.services.authentication_services - ERROR - Login Required Exception: 500: filter() got an unexpected keyword argument 'skip'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0, skip=skip, limit=limit, sort_criteria=sort_criteria).all()
TypeError: filter() got an unexpected keyword argument 'skip'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 44, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'skip'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'skip'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'skip'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 107, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 84, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'skip'
2024-08-02 16:46:33,784 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: filter() got an unexpected keyword argument 'offset'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0,
TypeError: filter() got an unexpected keyword argument 'offset'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 46, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'offset'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'offset'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'offset'
2024-08-02 16:46:33,784 - backend.services.authentication_services - ERROR - Login Required Exception: 500: filter() got an unexpected keyword argument 'offset'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 37, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0,
TypeError: filter() got an unexpected keyword argument 'offset'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 46, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'offset'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'offset'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 84, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'offset'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 107, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 84, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter() got an unexpected keyword argument 'offset'
2024-08-02 17:05:45,669 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 38, in view_data_all
    view_stmt = db.query(table).offset(skip).limit(limit).filter(table.c.is_deleted == 0).all()
  File "<string>", line 2, in filter
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in filter
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 303, in generate
    assertion(self, fn.__name__)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 442, in _no_limit_offset
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 77, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.
2024-08-02 17:05:45,684 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 101, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 38, in view_data_all
    view_stmt = db.query(table).offset(skip).limit(limit).filter(table.c.is_deleted == 0).all()
  File "<string>", line 2, in filter
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in filter
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 303, in generate
    assertion(self, fn.__name__)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 442, in _no_limit_offset
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 71, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 77, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 107, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 84, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.filter() being called on a Query which already has LIMIT or OFFSET applied.  Call filter() before limit() or offset() are applied.
2024-08-02 17:08:08,168 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Query.order_by() being called on a Query which already has LIMIT or OFFSET applied.  Call order_by() before limit() or offset() are applied.
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 38, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted ==
  File "<string>", line 2, in order_by
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2027, in order_by
    assertion("order_by")
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 442, in _no_limit_offset
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query.order_by() being called on a Query which already has LIMIT or OFFSET applied.  Call order_by() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.order_by() being called on a Query which already has LIMIT or OFFSET applied.  Call order_by() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.order_by() being called on a Query which already has LIMIT or OFFSET applied.  Call order_by() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 113, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 77, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.order_by() being called on a Query which already has LIMIT or OFFSET applied.  Call order_by() before limit() or offset() are applied.
2024-08-02 17:08:53,734 - backend.services.authentication_services - ERROR - Login Required Exception: 500: ORDER BY expression expected, got [('category_name', 1)].
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 38, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sort_criteria).offset(skip).limit(limit).all()
  File "<string>", line 2, in order_by
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2032, in order_by
    criterion = tuple(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2033, in <genexpr>
    coercions.expect(roles.OrderByRole, clause)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 634, in _literal_coercion
    self._raise_for_expected(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: ORDER BY expression expected, got [('category_name', 1)].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got [('category_name', 1)].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got [('category_name', 1)].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 113, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 77, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got [('category_name', 1)].
2024-08-02 17:09:08,516 - backend.services.authentication_services - ERROR - Login Required Exception: 500: ORDER BY expression expected, got [('category_name', 1)].
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 38, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted ==
  File "<string>", line 2, in order_by
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2032, in order_by
    criterion = tuple(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2033, in <genexpr>
    coercions.expect(roles.OrderByRole, clause)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 634, in _literal_coercion
    self._raise_for_expected(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: ORDER BY expression expected, got [('category_name', 1)].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 46, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got [('category_name', 1)].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got [('category_name', 1)].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 113, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 77, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got [('category_name', 1)].
2024-08-02 17:10:40,714 - backend.services.authentication_services - ERROR - Login Required Exception: 500: ORDER BY expression expected, got 1.
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 38, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted ==
  File "<string>", line 2, in order_by
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2032, in order_by
    criterion = tuple(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2033, in <genexpr>
    coercions.expect(roles.OrderByRole, clause)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 634, in _literal_coercion
    self._raise_for_expected(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 518, in _raise_for_expected
    raise exc.ArgumentError(msg, code=code) from err
sqlalchemy.exc.ArgumentError: ORDER BY expression expected, got 1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip, limit, sort_criteria)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 49, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got 1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 68, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 142, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got 1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 113, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 77, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: ORDER BY expression expected, got 1.
2024-08-02 19:30:47,186 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 88, in admin_read_subcategories
    subcategory_data = subcategory_dao.read_subcategories()
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\subcategory_dao.py", line 18, in read_subcategories
    subcategory_data = sql_dynamic.view_data_all('subcategory_table')
TypeError: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 61, in read_subcategories
    response_data = subcategory_services.admin_read_subcategories(user_id)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 125, in admin_read_subcategories
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 68, in read_subcategories
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'
2024-08-02 19:30:47,246 - backend.services.authentication_services - ERROR - Login Required Exception: 500: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 88, in admin_read_subcategories
    subcategory_data = subcategory_dao.read_subcategories()
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\subcategory_dao.py", line 18, in read_subcategories
    subcategory_data = sql_dynamic.view_data_all('subcategory_table')
TypeError: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 61, in read_subcategories
    response_data = subcategory_services.admin_read_subcategories(user_id)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 125, in admin_read_subcategories
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 68, in read_subcategories
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 110, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 87, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: view_data_all() missing 3 required positional arguments: 'skip', 'limit', and 'sort_criteria'
2024-08-02 19:35:33,321 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Query' object has no attribute 'search'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).offset(
AttributeError: 'Query' object has no attribute 'search'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'search'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'search'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 116, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'search'
2024-08-02 19:36:25,966 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 303, in generate
    assertion(self, fn.__name__)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 442, in _no_limit_offset
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.
2024-08-02 19:36:25,977 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 303, in generate
    assertion(self, fn.__name__)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 442, in _no_limit_offset
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 110, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 87, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Query.having() being called on a Query which already has LIMIT or OFFSET applied.  Call having() before limit() or offset() are applied.
2024-08-02 19:36:46,766 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).having(search).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
2024-08-02 19:36:46,771 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).having(search).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 110, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 87, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
2024-08-02 19:37:00,182 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).having(search).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")
2024-08-02 19:37:00,186 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).having(search).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 110, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 87, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression "'spring'" should be explicitly declared as text("'spring'")
2024-08-02 19:37:13,410 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).having(search).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')
2024-08-02 19:37:13,410 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).order_by(sorting_column).having(search).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 47, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 74, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 110, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 87, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression '(spring)' should be explicitly declared as text('(spring)')
2024-08-02 19:44:42,736 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Query' object has no attribute 'filer'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 40, in view_data_all
    view_stmt = db.query(table).filer(table.c.is_deleted ==
AttributeError: 'Query' object has no attribute 'filer'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 54, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'filer'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'filer'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 116, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'filer'
2024-08-02 19:45:00,706 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 40, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).having(search).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 53, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 116, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
2024-08-02 19:45:17,176 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 40, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted == 0).having((search)).offset(
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 279, in _generative
    x = fn(self, *args, **kw)
  File "<string>", line 2, in having
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\base.py", line 304, in generate
    fn(self, *args, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2107, in having
    having_criteria = coercions.expect(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 396, in expect
    resolved = impl._literal_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 621, in _literal_coercion
    return self._text_coercion(element, argname, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 918, in _text_coercion
    return _no_text_coercion(element, argname)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.ArgumentError: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 53, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 116, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Textual SQL expression 'spring' should be explicitly declared as text('spring')
2024-08-02 19:47:41,296 - backend.services.authentication_services - ERROR - Login Required Exception: 500: filter_by() takes 1 positional argument but 2 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 40, in view_data_all
    view_stmt = db.query(table).filter(table.c.is_deleted ==
TypeError: filter_by() takes 1 positional argument but 2 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 105, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 18, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 54, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter_by() takes 1 positional argument but 2 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 143, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter_by() takes 1 positional argument but 2 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 116, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: filter_by() takes 1 positional argument but 2 were given
2024-08-05 11:18:08,754 - backend.services.authentication_services - ERROR - Refresh Token function exception: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 41, in refresh_token
    data = jwt.decode(refreshtoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired
2024-08-05 11:18:08,791 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 41, in refresh_token
    data = jwt.decode(refreshtoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 110, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 87, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-05 11:20:08,005 - backend.services.authentication_services - ERROR - Refresh Token function exception: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 41, in refresh_token
    data = jwt.decode(refreshtoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired
2024-08-05 11:20:08,008 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 104, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 41, in refresh_token
    data = jwt.decode(refreshtoken, AuthenticationEnum.SECRET_KEY,
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 111, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 87, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Signature has expired
2024-08-05 11:44:45,483 - backend.services.authentication_services - ERROR - Login Required Exception: 500: view_data_all() missing 4 required positional arguments: 'skip', 'limit', 'sort_criteria', and 'search'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 88, in admin_read_subcategories
    subcategory_data = subcategory_dao.read_subcategories()
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\subcategory_dao.py", line 19, in read_subcategories
    subcategory_data = sql_dynamic.view_data_all('subcategory_table')
TypeError: view_data_all() missing 4 required positional arguments: 'skip', 'limit', 'sort_criteria', and 'search'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 61, in read_subcategories
    response_data = subcategory_services.admin_read_subcategories(user_id)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 125, in admin_read_subcategories
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: view_data_all() missing 4 required positional arguments: 'skip', 'limit', 'sort_criteria', and 'search'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 122, in decorator
    if login_vo_list.login_role in role and \
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 68, in read_subcategories
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: view_data_all() missing 4 required positional arguments: 'skip', 'limit', 'sort_criteria', and 'search'
2024-08-05 12:11:19,169 - backend.services.authentication_services - ERROR - Login Required Exception: 500: all
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
KeyError: 'all'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 32, in view_data_all
    .where(table.c.all == search).offset(skip).limit(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: all

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 109, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: all

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 148, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: all

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: all
2024-08-05 12:11:36,702 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'r'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 32, in view_data_all
    .where(table.r == search).offset(skip).limit(
AttributeError: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 109, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 148, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'
2024-08-05 12:12:35,181 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'r'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 32, in view_data_all
    .where(table.r.all == search).offset(skip).limit(
AttributeError: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 109, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 45, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 148, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'
2024-08-05 12:13:33,373 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'r'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 32, in view_data_all
    .where(table.r.category_name == search).offset(
AttributeError: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 109, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 46, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 71, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 148, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 81, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'r'
2024-08-05 14:27:52,356 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 558, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 822, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 1200, in read
    first_packet = self.connection._read_packet()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 772, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 17, in insert_data
    db.commit()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2017, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 1302, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 1277, in _prepare_impl
    self.session.flush()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4341, in flush
    self._flush(objects)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4477, in _flush
    transaction.rollback(_capture_exception=True)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4437, in _flush
    flush_context.execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 558, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 822, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 1200, in read
    first_packet = self.connection._read_packet()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 772, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 61, in admin_insert_subcategory
    subcategory_dao.create_subcategory(subcategory_vo)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\subcategory_dao.py", line 7, in create_subcategory
    sql_dynamic.insert_data('subcategory_table', subcategory_data)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 23, in insert_data
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 38, in create_subcategory
    response_data = subcategory_services.admin_insert_subcategory(
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 70, in admin_insert_subcategory
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 45, in create_subcategory
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2024-08-05 14:28:36,952 - backend.services.authentication_services - ERROR - Login Required Exception: 500: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 92, in view_data_by_email
    view_stmt = db.query(table).filter(table.c.login_username == email).first()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2728, in first
    return self.limit(1)._iter().first()  # type: ignore
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2351, in execute
    return self._execute_internal(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2226, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2095, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 973, in _raise_for_prerequisite_state
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 120, in decorator
    login_vo_list = authentication_dao.read_user_by_email(data.get('public_id'))
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\authentication_dao.py", line 16, in read_user_by_email
    login_vo_list = sql_dynamic.view_data_by_email('login_table',
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 103, in view_data_by_email
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)
2024-08-05 14:29:11,513 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 92, in view_data_by_email
    view_stmt = db.query(table).filter(table.c.login_username == email).first()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2728, in first
    return self.limit(1)._iter().first()  # type: ignore
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2351, in execute
    return self._execute_internal(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2226, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2095, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 973, in _raise_for_prerequisite_state
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 52, in refresh_token
    login_vo_list = authentication_dao.read_user_by_email(data['public_id'])
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\authentication_dao.py", line 16, in read_user_by_email
    login_vo_list = sql_dynamic.view_data_by_email('login_table',
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 103, in view_data_by_email
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)
2024-08-05 14:29:11,527 - backend.services.authentication_services - ERROR - Login Required Exception: 500: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 92, in view_data_by_email
    view_stmt = db.query(table).filter(table.c.login_username == email).first()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2728, in first
    return self.limit(1)._iter().first()  # type: ignore
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2351, in execute
    return self._execute_internal(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2226, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2095, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 973, in _raise_for_prerequisite_state
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 52, in refresh_token
    login_vo_list = authentication_dao.read_user_by_email(data['public_id'])
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\authentication_dao.py", line 16, in read_user_by_email
    login_vo_list = sql_dynamic.view_data_by_email('login_table',
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 103, in view_data_by_email
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'khikhi', 'subcategory_description': 'khakha', 'subcategory_count': 400, 'created_date': '2024-08-05 14:27:52', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)
2024-08-05 14:31:57,465 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'ddccff', 'subcategory_description': 'vbg', 'subcategory_count': 2200, 'created_date': '2024-08-05 14:31:57', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 558, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 822, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 1200, in read
    first_packet = self.connection._read_packet()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 772, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 17, in insert_data
    db.commit()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2017, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 1302, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 1277, in _prepare_impl
    self.session.flush()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4341, in flush
    self._flush(objects)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4477, in _flush
    transaction.rollback(_capture_exception=True)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4437, in _flush
    flush_context.execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 558, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 822, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 1200, in read
    first_packet = self.connection._read_packet()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 772, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'ddccff', 'subcategory_description': 'vbg', 'subcategory_count': 2200, 'created_date': '2024-08-05 14:31:57', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 61, in admin_insert_subcategory
    subcategory_dao.create_subcategory(subcategory_vo)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\subcategory_dao.py", line 7, in create_subcategory
    sql_dynamic.insert_data('subcategory_table', subcategory_data)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 24, in insert_data
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'ddccff', 'subcategory_description': 'vbg', 'subcategory_count': 2200, 'created_date': '2024-08-05 14:31:57', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 38, in create_subcategory
    response_data = subcategory_services.admin_insert_subcategory(
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 70, in admin_insert_subcategory
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'ddccff', 'subcategory_description': 'vbg', 'subcategory_count': 2200, 'created_date': '2024-08-05 14:31:57', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 45, in create_subcategory
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'ddccff', 'subcategory_description': 'vbg', 'subcategory_count': 2200, 'created_date': '2024-08-05 14:31:57', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 9}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2024-08-05 14:35:18,587 - backend.services.authentication_services - ERROR - Login Required Exception: 400: Category ID does not exist
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 558, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 822, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 1200, in read
    first_packet = self.connection._read_packet()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 772, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 19, in insert_data
    db.commit()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2017, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 1302, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 1277, in _prepare_impl
    self.session.flush()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4341, in flush
    self._flush(objects)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4477, in _flush
    transaction.rollback(_capture_exception=True)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 4437, in _flush
    flush_context.execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 2353, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\default.py", line 924, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 558, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 822, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 1200, in read
    first_packet = self.connection._read_packet()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\connections.py", line 772, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`fastapi`.`subcategory_table`, CONSTRAINT `subcategory_table_ibfk_1` FOREIGN KEY (`subcategory_category_id`) REFERENCES `category_table` (`category_id`) ON UPDATE CASCADE)')
[SQL: INSERT INTO subcategory_table (subcategory_name, subcategory_description, subcategory_count, created_date, created_by, edited_date, edited_by, is_deleted, subcategory_category_id) VALUES (%(subcategory_name)s, %(subcategory_description)s, %(subcategory_count)s, %(created_date)s, %(created_by)s, %(edited_date)s, %(edited_by)s, %(is_deleted)s, %(subcategory_category_id)s)]
[parameters: {'subcategory_name': 'ddccff', 'subcategory_description': 'vbg', 'subcategory_count': 2200, 'created_date': '2024-08-05 14:35:18', 'created_by': 'natansh@gmail.com', 'edited_date': '', 'edited_by': '', 'is_deleted': 0, 'subcategory_category_id': 18}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 61, in admin_insert_subcategory
    subcategory_dao.create_subcategory(subcategory_vo)
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\subcategory_dao.py", line 7, in create_subcategory
    sql_dynamic.insert_data('subcategory_table', subcategory_data)
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 25, in insert_data
    raise HTTPException(status_code=400, detail="Category ID does not exist")
fastapi.exceptions.HTTPException: 400: Category ID does not exist

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 38, in create_subcategory
    response_data = subcategory_services.admin_insert_subcategory(
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\subcategory_services.py", line 70, in admin_insert_subcategory
    ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: Category ID does not exist

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\subcategory_controller.py", line 45, in create_subcategory
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: Category ID does not exist
2024-08-05 15:14:53,962 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:14:54,062 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:16:18,628 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:16:18,628 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:16:37,478 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:16:37,478 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:18:09,425 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 113, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:18:09,425 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 113, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 119, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:18:58,828 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 15:18:58,828 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 132, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 52, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 99, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 108, in read_products
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 16:05:55,921 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: like
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
KeyError: 'like'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    b = table.c.like(f"%{search}%")
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: like

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 108, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 54, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: like

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 70, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 147, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: like

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: like
2024-08-05 16:05:55,933 - backend.services.authentication_services - ERROR - Login Required Exception: 500: like
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
KeyError: 'like'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 39, in view_data_all
    b = table.c.like(f"%{search}%")
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: like

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 108, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 54, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: like

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 70, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 147, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: like

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: like

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: like
2024-08-05 16:33:42,274 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 98, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 50, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 70, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 137, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 16:33:42,283 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 112, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 30, in view_data_all
    sorting_column = sort_criteria[0][0]
TypeError: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 98, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 50, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 70, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 137, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 82, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 95, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object is not subscriptable
2024-08-05 16:36:35,114 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Can't resolve label reference for ORDER BY / GROUP BY / DISTINCT etc. Textual SQL expression 'category_ev' should be explicitly declared as text('category_ev')
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 2499, in visit_textual_label_reference
    col = with_cols[element.element]
KeyError: 'category_ev'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 43, in view_data_all
    return query.all()
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2351, in execute
    return self._execute_internal(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\session.py", line 2236, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\engine\base.py", line 1632, in _execute_clauseelement
    compiled_sql, extracted_params, cache_hit = elem._compile_w_cache(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\elements.py", line 703, in _compile_w_cache
    compiled_sql = self._compiler(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\elements.py", line 316, in _compiler
    return dialect.statement_compiler(dialect, self, **kw)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 1429, in __init__
    Compiled.__init__(self, dialect, statement, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 870, in __init__
    self.string = self.process(self.statement, **compile_kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 915, in process
    return obj._compiler_dispatch(self, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 4824, in visit_select
    text = self._compose_select_body(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 5007, in _compose_select_body
    text += self.order_by_clause(select, **kwargs)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 5116, in order_by_clause
    order_by = self._generate_delimited_list(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 2752, in _generate_delimited_list
    return separator.join(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 2752, in <genexpr>
    return separator.join(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 2754, in <genexpr>
    for s in (c._compiler_dispatch(self, **kw) for c in elements)
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\visitors.py", line 141, in _compiler_dispatch
    return meth(self, **kw)  # type: ignore  # noqa: E501
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\compiler.py", line 2501, in visit_textual_label_reference
    coercions._no_text_coercion(
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\coercions.py", line 584, in _no_text_coercion
    raise exc_cls(
sqlalchemy.exc.CompileError: Can't resolve label reference for ORDER BY / GROUP BY / DISTINCT etc. Textual SQL expression 'category_ev' should be explicitly declared as text('category_ev')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 99, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 50, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Can't resolve label reference for ORDER BY / GROUP BY / DISTINCT etc. Textual SQL expression 'category_ev' should be explicitly declared as text('category_ev')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 70, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 138, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Can't resolve label reference for ORDER BY / GROUP BY / DISTINCT etc. Textual SQL expression 'category_ev' should be explicitly declared as text('category_ev')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Can't resolve label reference for ORDER BY / GROUP BY / DISTINCT etc. Textual SQL expression 'category_ev' should be explicitly declared as text('category_ev')
2024-08-05 16:38:22,132 - backend.services.authentication_services - ERROR - Login Required Exception: 500: is_created
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
KeyError: 'is_created'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 33, in view_data_all
    sorting_column = table.c.is_created
  File "C:\ProgramData\Anaconda3\lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: is_created

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 99, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table', skip,
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 53, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: is_created

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 70, in read_categories
    response_data = category_services.admin_read_categories(user_id,
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 138, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: is_created

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 124, in decorator
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: is_created
