2024-08-08 11:37:09,275 - backend.services.authentication_services - ERROR - Login Required Exception: Signature has expired
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired
2024-08-08 11:40:11,904 - backend.services.authentication_services - ERROR - Login Required Exception: 'State' object has no attribute 'user'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 119, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\starlette\datastructures.py", line 709, in __getattr__
    return self._state[key]
KeyError: 'user'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 128, in decorator
    user_id = request.state.user.get('username')
  File "C:\ProgramData\Anaconda3\lib\site-packages\starlette\datastructures.py", line 712, in __getattr__
    raise AttributeError(message.format(self.__class__.__name__, key))
AttributeError: 'State' object has no attribute 'user'
2024-08-13 11:48:59,110 - backend.services.authentication_services - ERROR - Login Required Exception: module 'jwt.exceptions' has no attribute 'InvalidSignatureError'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 119, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^
AttributeError: module 'jwt' has no attribute 'decode'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 121, in decorator
    except jwt.exceptions.InvalidSignatureError:
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'jwt.exceptions' has no attribute 'InvalidSignatureError'
2024-08-13 12:01:18,695 - backend.services.authentication_services - ERROR - Login Required Exception: module 'jwt.exceptions' has no attribute 'InvalidSignatureError'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 119, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^
AttributeError: module 'jwt' has no attribute 'decode'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 121, in decorator
    except jwt.exceptions.InvalidSignatureError:
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'jwt.exceptions' has no attribute 'InvalidSignatureError'
2024-08-13 14:35:20,104 - backend.services.authentication_services - ERROR - Refresh Token function exception: 'NoneType' object has no attribute 'login_username'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 140, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 78, in refresh_token
    logger.info(f"Refreshing tokens for '{login_vo_list.login_username}'.")
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'login_username'
2024-08-13 14:35:20,104 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'NoneType' object has no attribute 'login_username'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 140, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\fastapi_structural\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 78, in refresh_token
    logger.info(f"Refreshing tokens for '{login_vo_list.login_username}'.")
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'login_username'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 123, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'NoneType' object has no attribute 'login_username'
2024-08-13 18:37:43,229 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: admin_read_categories() missing 1 required positional argument: 'background_tasks'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 76, in read_categories
    response_data = category_services.admin_read_categories(user_id,
TypeError: admin_read_categories() missing 1 required positional argument: 'background_tasks'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 91, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: admin_read_categories() missing 1 required positional argument: 'background_tasks'
2024-08-13 18:37:43,331 - backend.services.authentication_services - ERROR - Login Required Exception: 500: admin_read_categories() missing 1 required positional argument: 'background_tasks'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 76, in read_categories
    response_data = category_services.admin_read_categories(user_id,
TypeError: admin_read_categories() missing 1 required positional argument: 'background_tasks'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 91, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: admin_read_categories() missing 1 required positional argument: 'background_tasks'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: admin_read_categories() missing 1 required positional argument: 'background_tasks'
2024-08-21 14:38:05,186 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 147, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:38:05,209 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 147, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:38:25,920 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 147, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:38:25,930 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 147, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:41:55,011 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:41:55,023 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:44:56,305 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:44:56,311 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:48:45,818 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:48:45,818 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:48:46,664 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:48:46,679 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:48:55,777 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:48:55,793 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:03,517 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:03,534 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:04,466 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:04,482 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:20,150 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:20,150 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:21,042 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:21,064 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:33,417 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:33,432 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:34,308 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:34,324 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:43,592 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:43,602 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:44,189 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:44,205 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:45,633 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:45,633 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:46,419 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:46,429 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:46,583 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:46,583 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:48,028 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:48,051 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:54,966 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:54,966 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:55,929 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:51:55,944 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:01,799 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:01,815 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:02,832 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:02,901 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:12,822 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:12,837 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:29,466 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:29,466 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:30,173 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:52:30,179 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:54:27,314 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:54:27,314 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:54:28,440 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:54:28,471 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid crypto padding
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 281, in _load
    signature = base64url_decode(crypto_segment)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\utils.py", line 33, in base64url_decode
    return base64.urlsafe_b64decode(input_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 134, in urlsafe_b64decode
    return b64decode(s)
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\base64.py", line 88, in b64decode
    return binascii.a2b_base64(s, strict_mode=validate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
binascii.Error: Incorrect padding

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 283, in _load
    raise DecodeError("Invalid crypto padding") from err
jwt.exceptions.DecodeError: Invalid crypto padding
2024-08-21 14:58:21,835 - backend.services.authentication_services - ERROR - Login Required Exception: Not enough segments
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 257, in _load
    signing_input, crypto_segment = jwt.rsplit(b".", 1)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: not enough values to unpack (expected 2, got 1)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 260, in _load
    raise DecodeError("Not enough segments") from err
jwt.exceptions.DecodeError: Not enough segments
2024-08-21 14:58:21,843 - backend.services.authentication_services - ERROR - Login Required Exception: Not enough segments
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 257, in _load
    signing_input, crypto_segment = jwt.rsplit(b".", 1)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: not enough values to unpack (expected 2, got 1)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 260, in _load
    raise DecodeError("Not enough segments") from err
jwt.exceptions.DecodeError: Not enough segments
2024-08-21 15:00:48,594 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 268, in _load
    header = json.loads(header_data)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\json\__init__.py", line 341, in loads
    s = s.decode(detect_encoding(s), 'surrogatepass')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 147, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 270, in _load
    raise DecodeError(f"Invalid header string: {e}") from e
jwt.exceptions.DecodeError: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
2024-08-21 15:00:48,605 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 268, in _load
    header = json.loads(header_data)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\json\__init__.py", line 341, in loads
    s = s.decode(detect_encoding(s), 'surrogatepass')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 147, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 270, in _load
    raise DecodeError(f"Invalid header string: {e}") from e
jwt.exceptions.DecodeError: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
2024-08-21 15:01:14,065 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 268, in _load
    header = json.loads(header_data)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\json\__init__.py", line 341, in loads
    s = s.decode(detect_encoding(s), 'surrogatepass')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 270, in _load
    raise DecodeError(f"Invalid header string: {e}") from e
jwt.exceptions.DecodeError: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
2024-08-21 15:01:14,077 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 268, in _load
    header = json.loads(header_data)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\json\__init__.py", line 341, in loads
    s = s.decode(detect_encoding(s), 'surrogatepass')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 270, in _load
    raise DecodeError(f"Invalid header string: {e}") from e
jwt.exceptions.DecodeError: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
2024-08-21 15:01:45,962 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 268, in _load
    header = json.loads(header_data)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\json\__init__.py", line 341, in loads
    s = s.decode(detect_encoding(s), 'surrogatepass')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 270, in _load
    raise DecodeError(f"Invalid header string: {e}") from e
jwt.exceptions.DecodeError: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
2024-08-21 15:01:45,967 - backend.services.authentication_services - ERROR - Login Required Exception: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 268, in _load
    header = json.loads(header_data)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\json\__init__.py", line 341, in loads
    s = s.decode(detect_encoding(s), 'surrogatepass')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 270, in _load
    raise DecodeError(f"Invalid header string: {e}") from e
jwt.exceptions.DecodeError: Invalid header string: 'utf-8' codec can't decode byte 0xc7 in position 1: invalid continuation byte
2024-08-21 15:04:00,319 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:04:00,341 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:04:00,362 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:04:00,364 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:04:24,050 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:04:24,054 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:04:24,087 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:04:24,091 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:06:21,370 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:06:21,375 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:06:21,382 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:06:21,382 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:07:58,431 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:07:58,434 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:07:58,444 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:07:58,446 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:09:12,445 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:09:12,462 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:09:12,544 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:09:12,550 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:09:57,138 - backend.services.authentication_services - ERROR - Refresh Token function exception: read_categories() missing 1 required positional argument: 'background_tasks'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(response, request)
                 ^^^^^^^^^^^^^^^^^^^^^
TypeError: read_categories() missing 1 required positional argument: 'background_tasks'
2024-08-21 15:09:57,139 - backend.services.authentication_services - ERROR - Login Required Exception: 500: read_categories() missing 1 required positional argument: 'background_tasks'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(response, request)
                 ^^^^^^^^^^^^^^^^^^^^^
TypeError: read_categories() missing 1 required positional argument: 'background_tasks'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: read_categories() missing 1 required positional argument: 'background_tasks'
2024-08-21 15:09:57,145 - backend.services.authentication_services - ERROR - Refresh Token function exception: read_categories() missing 1 required positional argument: 'background_tasks'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(response, request)
                 ^^^^^^^^^^^^^^^^^^^^^
TypeError: read_categories() missing 1 required positional argument: 'background_tasks'
2024-08-21 15:09:57,146 - backend.services.authentication_services - ERROR - Login Required Exception: 500: read_categories() missing 1 required positional argument: 'background_tasks'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(response, request)
                 ^^^^^^^^^^^^^^^^^^^^^
TypeError: read_categories() missing 1 required positional argument: 'background_tasks'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: read_categories() missing 1 required positional argument: 'background_tasks'
2024-08-21 15:10:16,929 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:10:16,934 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:10:16,959 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:10:16,964 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 148, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 117, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 157, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 130, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:10:47,480 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:10:47,484 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:10:47,506 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:10:47,509 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:14:40,787 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:14:40,799 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:14:40,814 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 15:14:40,817 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Invalid token type. Token must be a <class 'bytes'>
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 149, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 80, in read_categories
    data = jwt.decode(accesstoken,
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 151, in decode_complete
    decoded = api_jws.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 198, in decode_complete
    payload, signing_input, header, signature = self._load(jwt)
                                                ^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jws.py", line 254, in _load
    raise DecodeError(f"Invalid token type. Token must be a {bytes}")
jwt.exceptions.DecodeError: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 118, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 158, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 131, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Invalid token type. Token must be a <class 'bytes'>
2024-08-21 19:06:45,977 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 56, in view_data_all
    table.c.product_category_id,).all()
                                  ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 65, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-21 19:10:09,492 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_id AS product_table_product_id__1, product_table.product_name AS product_table_product_name__1, product_table.product_description AS product_table_product_description__1, product_table.product_price AS product_table_product_price__1, product_table.product_quantity AS product_table_product_quantity__1, product_table.product_image_name AS product_table_product_image_name__1, product_table.product_image_path AS product_table_product_image_path__1, product_table.created_date AS product_table_created_date__1, product_table.created_by AS product_table_created_by__1, product_table.edited_date AS product_table_edited_date__1, product_table.edited_by AS product_table_edited_by__1, product_table.is_deleted AS product_table_is_deleted__1, product_table.product_category_id AS product_table_product_category_id__1, product_table.product_subcategory_id AS product_table_product_subcategory_id__1 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 57, in view_data_all
    table.c.product_subcategory_id).all()
                                    ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_id AS product_table_product_id__1, product_table.product_name AS product_table_product_name__1, product_table.product_description AS product_table_product_description__1, product_table.product_price AS product_table_product_price__1, product_table.product_quantity AS product_table_product_quantity__1, product_table.product_image_name AS product_table_product_image_name__1, product_table.product_image_path AS product_table_product_image_path__1, product_table.created_date AS product_table_created_date__1, product_table.created_by AS product_table_created_by__1, product_table.edited_date AS product_table_edited_date__1, product_table.edited_by AS product_table_edited_by__1, product_table.is_deleted AS product_table_is_deleted__1, product_table.product_category_id AS product_table_product_category_id__1, product_table.product_subcategory_id AS product_table_product_subcategory_id__1 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_id AS product_table_product_id__1, product_table.product_name AS product_table_product_name__1, product_table.product_description AS product_table_product_description__1, product_table.product_price AS product_table_product_price__1, product_table.product_quantity AS product_table_product_quantity__1, product_table.product_image_name AS product_table_product_image_name__1, product_table.product_image_path AS product_table_product_image_path__1, product_table.created_date AS product_table_created_date__1, product_table.created_by AS product_table_created_by__1, product_table.edited_date AS product_table_edited_date__1, product_table.edited_by AS product_table_edited_by__1, product_table.is_deleted AS product_table_is_deleted__1, product_table.product_category_id AS product_table_product_category_id__1, product_table.product_subcategory_id AS product_table_product_subcategory_id__1 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_id AS product_table_product_id__1, product_table.product_name AS product_table_product_name__1, product_table.product_description AS product_table_product_description__1, product_table.product_price AS product_table_product_price__1, product_table.product_quantity AS product_table_product_quantity__1, product_table.product_image_name AS product_table_product_image_name__1, product_table.product_image_path AS product_table_product_image_path__1, product_table.created_date AS product_table_created_date__1, product_table.created_by AS product_table_created_by__1, product_table.edited_date AS product_table_edited_date__1, product_table.edited_by AS product_table_edited_by__1, product_table.is_deleted AS product_table_is_deleted__1, product_table.product_category_id AS product_table_product_category_id__1, product_table.product_subcategory_id AS product_table_product_subcategory_id__1 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_id AS product_table_product_id__1, product_table.product_name AS product_table_product_name__1, product_table.product_description AS product_table_product_description__1, product_table.product_price AS product_table_product_price__1, product_table.product_quantity AS product_table_product_quantity__1, product_table.product_image_name AS product_table_product_image_name__1, product_table.product_image_path AS product_table_product_image_path__1, product_table.created_date AS product_table_created_date__1, product_table.created_by AS product_table_created_by__1, product_table.edited_date AS product_table_edited_date__1, product_table.edited_by AS product_table_edited_by__1, product_table.is_deleted AS product_table_is_deleted__1, product_table.product_category_id AS product_table_product_category_id__1, product_table.product_subcategory_id AS product_table_product_subcategory_id__1 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-21 19:10:35,474 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'list' object has no attribute 'asc'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 57, in view_data_all
    table.c.product_subcategory_id).all().asc
                                          ^^^
AttributeError: 'list' object has no attribute 'asc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'asc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'asc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'asc'
2024-08-21 19:12:16,540 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1140, "In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'fastapi.product_table.product_category_id'; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1140, "In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'fastapi.product_table.product_category_id'; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 54, in view_data_all
    table.c.product_category_id).all()
                                 ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1140, "In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'fastapi.product_table.product_category_id'; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1140, "In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'fastapi.product_table.product_category_id'; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1140, "In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'fastapi.product_table.product_category_id'; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1140, "In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'fastapi.product_table.product_category_id'; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-21 19:14:09,172 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 54, in view_data_all
    table.c).group_by(table.c.product_category_id).all()
                                                   ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, product_table.product_description AS product_table_product_description, product_table.product_price AS product_table_product_price, product_table.product_quantity AS product_table_product_quantity, product_table.product_image_name AS product_table_product_image_name, product_table.product_image_path AS product_table_product_image_path, product_table.created_date AS product_table_created_date, product_table.created_by AS product_table_created_by, product_table.edited_date AS product_table_edited_date, product_table.edited_by AS product_table_edited_by, product_table.is_deleted AS product_table_is_deleted, product_table.product_category_id AS product_table_product_category_id, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-21 19:15:09,721 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 1496, in __getattr__
    return getattr(self.comparator, key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Comparator' object has no attribute 'group_by'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 53, in view_data_all
    new = db.query(func.count(table.c.product_category_id).group_by(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 1498, in __getattr__
    raise AttributeError(
AttributeError: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'
2024-08-21 19:25:49,429 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.is_deleted' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.is_deleted AS product_table_is_deleted 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.is_deleted' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 59, in view_data_all
    table.c.product_category_id).all()
                                 ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.is_deleted' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.is_deleted AS product_table_is_deleted 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 68, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.is_deleted' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.is_deleted AS product_table_is_deleted 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.is_deleted' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.is_deleted AS product_table_is_deleted 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.is_deleted' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.is_deleted AS product_table_is_deleted 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-21 19:26:16,562 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_category_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table GROUP BY product_table.is_deleted]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_category_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 59, in view_data_all
    table.c.is_deleted).all()
                        ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_category_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table GROUP BY product_table.is_deleted]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 68, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_category_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table GROUP BY product_table.is_deleted]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_category_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table GROUP BY product_table.is_deleted]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_category_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id 
FROM product_table GROUP BY product_table.is_deleted]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-21 19:20:45,869 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 1496, in __getattr__
    return getattr(self.comparator, key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Comparator' object has no attribute 'group_by'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 53, in view_data_all
    # new = db.query(func.count(table.c.product_category_id),
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 1498, in __getattr__
    raise AttributeError(
AttributeError: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    else:
          
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'
2024-08-21 19:34:12,153 - backend.services.authentication_services - ERROR - Login Required Exception: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 1496, in __getattr__
    return getattr(self.comparator, key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Comparator' object has no attribute 'group_by'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 53, in view_data_all
    # new = db.query(func.count(table.c.product_category_id),
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 1498, in __getattr__
    raise AttributeError(
AttributeError: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    else:
          
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: Neither 'count' object nor 'Comparator' object has an attribute 'group_by'
2024-08-22 12:07:17,885 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: product_category_id
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'product_category_id'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 57, in view_data_all
    new = db.query(func.count(table.c.product_category_id),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: product_category_id

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 101, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table',
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 68, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_category_id

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 87, in read_categories
    response_data = category_services.admin_read_categories(user_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 145, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_category_id

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_category_id
2024-08-22 12:07:17,894 - backend.services.authentication_services - ERROR - Login Required Exception: 500: product_category_id
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'product_category_id'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 57, in view_data_all
    new = db.query(func.count(table.c.product_category_id),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: product_category_id

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 101, in admin_read_categories
    category_data = category_dao.read_categories(skip, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\category_dao.py", line 20, in read_categories
    category_data = sql_dynamic.view_data_all('category_table',
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 68, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_category_id

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 87, in read_categories
    response_data = category_services.admin_read_categories(user_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\category_services.py", line 145, in admin_read_categories
    ApplicationServices.handle_exception(exception, True)
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_category_id

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\category_controller.py", line 98, in read_categories
    return ApplicationServices.handle_exception(exception, is_raise=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_category_id

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_category_id
2024-08-22 15:45:51,044 - backend.services.authentication_services - ERROR - Refresh Token function exception: 400: dictionary update sequence element #0 has length 4; 2 is required
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 61, in view_data_all
    dict(new)
ValueError: dictionary update sequence element #0 has length 4; 2 is required

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: dictionary update sequence element #0 has length 4; 2 is required

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: dictionary update sequence element #0 has length 4; 2 is required

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: dictionary update sequence element #0 has length 4; 2 is required
2024-08-22 15:45:51,047 - backend.services.authentication_services - ERROR - Login Required Exception: 400: dictionary update sequence element #0 has length 4; 2 is required
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 61, in view_data_all
    dict(new)
ValueError: dictionary update sequence element #0 has length 4; 2 is required

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: dictionary update sequence element #0 has length 4; 2 is required

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: dictionary update sequence element #0 has length 4; 2 is required

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: dictionary update sequence element #0 has length 4; 2 is required

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 400: dictionary update sequence element #0 has length 4; 2 is required
2024-08-22 15:54:04,113 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 55, in view_data_all
    new = (db.query(func.count(table.c.product_category_id, table.c.product_subcategory_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 15:54:04,113 - backend.services.authentication_services - ERROR - Login Required Exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 55, in view_data_all
    new = (db.query(func.count(table.c.product_category_id, table.c.product_subcategory_id),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 15:54:41,349 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 55, in view_data_all
    new = (db.query(func.count(table.c.product_category_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 15:54:41,351 - backend.services.authentication_services - ERROR - Login Required Exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 55, in view_data_all
    new = (db.query(func.count(table.c.product_category_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 15:54:45,297 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 55, in view_data_all
    new = (db.query(func.count(table.c.product_category_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 15:54:45,301 - backend.services.authentication_services - ERROR - Login Required Exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 55, in view_data_all
    new = (db.query(func.count(table.c.product_category_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 15:57:38,086 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 58, in view_data_all
    new = (db.query(func.count(table.c.product_category_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 75, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 15:57:38,091 - backend.services.authentication_services - ERROR - Login Required Exception: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 58, in view_data_all
    new = (db.query(func.count(table.c.product_category_id,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\functions.py", line 968, in __call__
    return func(*c, **o)
           ^^^^^^^^^^^^^
TypeError: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 75, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: count.__init__() takes from 1 to 2 positional arguments but 3 were given
2024-08-22 16:01:07,104 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 61, in view_data_all
    table.c.product_subcategory_id).all())
                                    ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 75, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_id AS product_table_product_id 
FROM product_table GROUP BY product_table.product_category_id, product_table.product_subcategory_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-22 16:04:21,854 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 57, in view_data_all
    group_by(table.c.product_category_id).all())
                                          ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 71, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'fastapi.product_table.product_subcategory_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")
[SQL: SELECT count(product_table.product_category_id) AS count_1, product_table.product_category_id AS product_table_product_category_id, count(product_table.product_subcategory_id) AS count_2, product_table.product_subcategory_id AS product_table_product_subcategory_id 
FROM product_table GROUP BY product_table.product_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-22 16:12:01,562 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'list' object has no attribute 'query'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 64, in view_data_all
    new.query(func.count(table.c.product_subcategory_id),
    ^^^^^^^^^
AttributeError: 'list' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 75, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'query'
2024-08-22 16:12:01,577 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'list' object has no attribute 'query'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 64, in view_data_all
    new.query(func.count(table.c.product_subcategory_id),
    ^^^^^^^^^
AttributeError: 'list' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 75, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'list' object has no attribute 'query'
2024-08-22 16:12:10,362 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Query' object has no attribute 'query'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 64, in view_data_all
    new.query(func.count(table.c.product_subcategory_id),
    ^^^^^^^^^
AttributeError: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 75, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'
2024-08-22 16:12:10,362 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Query' object has no attribute 'query'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 64, in view_data_all
    new.query(func.count(table.c.product_subcategory_id),
    ^^^^^^^^^
AttributeError: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 75, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'
2024-08-22 16:12:55,778 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Query' object has no attribute 'query'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    new.query(func.count(table.c.product_subcategory_id),
    ^^^^^^^^^
AttributeError: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 74, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'
2024-08-22 16:12:55,795 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Query' object has no attribute 'query'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    new.query(func.count(table.c.product_subcategory_id),
    ^^^^^^^^^
AttributeError: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 74, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object has no attribute 'query'
2024-08-22 16:14:25,479 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Query' object is not callable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    new(func.count(table.c.product_subcategory_id),
TypeError: 'Query' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 74, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object is not callable
2024-08-22 16:14:25,493 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Query' object is not callable
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 63, in view_data_all
    new(func.count(table.c.product_subcategory_id),
TypeError: 'Query' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 74, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Query' object is not callable
2024-08-22 16:35:44,410 - backend.services.authentication_services - ERROR - Login Required Exception: 500: list assignment index out of range
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 67, in view_data_all
    dct[key] = value
    ~~~^^^^^
IndexError: list assignment index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 94, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: list assignment index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: list assignment index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: list assignment index out of range
2024-08-23 11:52:55,332 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: name 'category_table' is not defined
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^
NameError: name 'category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 115, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'category_table' is not defined
2024-08-23 11:52:55,365 - backend.services.authentication_services - ERROR - Login Required Exception: 500: name 'category_table' is not defined
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^
NameError: name 'category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 115, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'category_table' is not defined
2024-08-23 11:55:06,697 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 115, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 11:55:06,697 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 115, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 11:55:53,351 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 115, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 11:55:53,362 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 115, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 11:57:43,980 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 67, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 11:57:43,980 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 67, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:02:08,691 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 117, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:02:08,691 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 117, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:02:46,659 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 67, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:02:46,674 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 67, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:03:18,148 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 67, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:03:18,158 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 67, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:03:54,422 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 68, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 117, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:03:54,422 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 68, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 117, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:10:21,802 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 115, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:12:23,217 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:12:54,951 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:12:54,967 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_name'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 66, in view_data_all
    category_table.category_name,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_name'
2024-08-23 12:13:24,701 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: 'Table' object has no attribute 'category_id'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 73, in view_data_all
    category_table.category_id ==
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_id'
2024-08-23 12:13:24,701 - backend.services.authentication_services - ERROR - Login Required Exception: 500: 'Table' object has no attribute 'category_id'
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 73, in view_data_all
    category_table.category_id ==
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Table' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 116, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: 'Table' object has no attribute 'category_id'
2024-08-23 12:30:24,241 - backend.services.authentication_services - ERROR - Login Required Exception: 500: name 'parent_category_table' is not defined
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 72, in view_data_all
    parent_category_table.c.category_name.label(
    ^^^^^^^^^^^^^^^^^^^^^
NameError: name 'parent_category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 144, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'parent_category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'parent_category_table' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: name 'parent_category_table' is not defined
2024-08-23 12:30:36,435 - backend.services.authentication_services - ERROR - Login Required Exception: 500: (pymysql.err.OperationalError) (1066, "Not unique table/alias: 'category_table'")
[SQL: SELECT product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, category_table.category_name AS product_category_name, subcategory_table.subcategory_name AS subcategory_table_subcategory_name, category_table.category_name AS subcategory_category_name 
FROM product_table INNER JOIN category_table ON category_table.category_id = product_table.product_category_id INNER JOIN subcategory_table ON subcategory_table.subcategory_id = product_table.product_subcategory_id INNER JOIN category_table ON category_table.category_id = subcategory_table.subcategory_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1066, "Not unique table/alias: 'category_table'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 81, in view_data_all
    .all()
     ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2673, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2362, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\cursors.py", line 322, in _query
    conn.query(q)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 825, in _read_query_result
    result.read()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1066, "Not unique table/alias: 'category_table'")
[SQL: SELECT product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, category_table.category_name AS product_category_name, subcategory_table.subcategory_name AS subcategory_table_subcategory_name, category_table.category_name AS subcategory_category_name 
FROM product_table INNER JOIN category_table ON category_table.category_id = product_table.product_category_id INNER JOIN subcategory_table ON subcategory_table.subcategory_id = product_table.product_subcategory_id INNER JOIN category_table ON category_table.category_id = subcategory_table.subcategory_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 144, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1066, "Not unique table/alias: 'category_table'")
[SQL: SELECT product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, category_table.category_name AS product_category_name, subcategory_table.subcategory_name AS subcategory_table_subcategory_name, category_table.category_name AS subcategory_category_name 
FROM product_table INNER JOIN category_table ON category_table.category_id = product_table.product_category_id INNER JOIN subcategory_table ON subcategory_table.subcategory_id = product_table.product_subcategory_id INNER JOIN category_table ON category_table.category_id = subcategory_table.subcategory_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1066, "Not unique table/alias: 'category_table'")
[SQL: SELECT product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, category_table.category_name AS product_category_name, subcategory_table.subcategory_name AS subcategory_table_subcategory_name, category_table.category_name AS subcategory_category_name 
FROM product_table INNER JOIN category_table ON category_table.category_id = product_table.product_category_id INNER JOIN subcategory_table ON subcategory_table.subcategory_id = product_table.product_subcategory_id INNER JOIN category_table ON category_table.category_id = subcategory_table.subcategory_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 163, in decorator
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: (pymysql.err.OperationalError) (1066, "Not unique table/alias: 'category_table'")
[SQL: SELECT product_table.product_id AS product_table_product_id, product_table.product_name AS product_table_product_name, category_table.category_name AS product_category_name, subcategory_table.subcategory_name AS subcategory_table_subcategory_name, category_table.category_name AS subcategory_category_name 
FROM product_table INNER JOIN category_table ON category_table.category_id = product_table.product_category_id INNER JOIN subcategory_table ON subcategory_table.subcategory_id = product_table.product_subcategory_id INNER JOIN category_table ON category_table.category_id = subcategory_table.subcategory_category_id]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2024-08-23 13:41:20,281 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: product_count
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'product_count'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 99, in view_data_all
    table.c.product_count,
    ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: product_count

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 144, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_count

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_count

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_count
2024-08-23 13:41:20,313 - backend.services.authentication_services - ERROR - Login Required Exception: 500: product_count
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'product_count'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 99, in view_data_all
    table.c.product_count,
    ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: product_count

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 144, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_count

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_count

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_count

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: product_count
2024-08-23 13:55:20,888 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: subcategory_quantity
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'subcategory_quantity'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 108, in view_data_all
    func.sum(table.c.subcategory_quantity).over(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 147, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity
2024-08-23 13:55:20,903 - backend.services.authentication_services - ERROR - Login Required Exception: 500: subcategory_quantity
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'subcategory_quantity'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 108, in view_data_all
    func.sum(table.c.subcategory_quantity).over(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 147, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity
2024-08-23 13:55:36,087 - backend.services.authentication_services - ERROR - Refresh Token function exception: 500: subcategory_quantity
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'subcategory_quantity'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 108, in view_data_all
    func.sum(table.c.subcategory_quantity).over(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 147, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity
2024-08-23 13:55:36,103 - backend.services.authentication_services - ERROR - Login Required Exception: 500: subcategory_quantity
Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 144, in decorator
    data = jwt.decode(accesstoken, AuthenticationEnum.SECRET_KEY, algorithms=["HS256"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 210, in decode
    decoded = self.decode_complete(
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 162, in decode_complete
    self._validate_claims(
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 248, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\jwt\api_jwt.py", line 306, in _validate_exp
    raise ExpiredSignatureError("Signature has expired")
jwt.exceptions.ExpiredSignatureError: Signature has expired

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1617, in __getattr__
    return self._index[key][1]
           ~~~~~~~~~~~^^^^^
KeyError: 'subcategory_quantity'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 108, in view_data_all
    func.sum(table.c.subcategory_quantity).over(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\Anaconda3\envs\Fastapi\Lib\site-packages\sqlalchemy\sql\base.py", line 1619, in __getattr__
    raise AttributeError(key) from err
AttributeError: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 126, in admin_read_products
    product_data = product_dao.read_products(skip, limit,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\dao\product_dao.py", line 14, in read_products
    product_vo_list = sql_dynamic.view_data_all('product_table',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\sql_dynamic.py", line 147, in view_data_all
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 107, in read_products
    response_data = product_services.admin_read_products(user_id, limit,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\product_services.py", line 184, in admin_read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 114, in refresh_token
    return await fn(**kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\api\controller\product_controller.py", line 117, in read_products
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 153, in decorator
    return await refresh_token(fn, role, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\authentication_services.py", line 127, in refresh_token
    return ApplicationServices.handle_exception(exception, True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Training\FastAPI\Structural FastAPI\backend\services\app_services.py", line 36, in handle_exception
    raise HTTPException(status_code=response['status_code'], detail=response['response_message'])
fastapi.exceptions.HTTPException: 500: subcategory_quantity
